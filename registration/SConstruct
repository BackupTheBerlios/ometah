# -*- coding: iso-8859-1 -*-
################################################################################
#  $Id: SConstruct,v 1.2 2005/12/08 22:59:26 nojhan Exp $
#  Copyright : Free Software Fundation
#  Author : Johann Dréo <nojhan@gmail.com>
################################################################################

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
# License for more details.
# 
# You should have received a copy of the GNU Lesser General
# Public License along with this program; if not, write to the Free

# Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
# 02111-1307 USA


################################################################################
# Environment
################################################################################

# flags for optimization, use them in production
foptim = '-fcaller-saves -fcse-follow-jumps -fcse-skip-blocks  \
          -felide-constructors -fexpensive-optimizations -ffast-math \
          -ffloat-store -funroll-all-loops -funroll-loops -O3'

# flags for checking the code
#-Wstrict-prototypes -Wmissing-prototypes 
fcheck = '-Wall -ansi -pedantic -Wimplicit \
          -Wredundant-decls -Wreturn-type -Wunused'
          
# flags for debugging
fdebug = '-ggdb'

# more flags
fsup = '-Wno-deprecated -ffast-math'

# setting the environnement
env = Environment()

# setting the options
opts = Options()
opts.AddOptions( \
    BoolOption('static', 'Build a static version',0), \
    BoolOption('debug', 'Compile with the debug informations',1) \
)
opts.Update(env)

flags=""
if env['debug']==1:
    flags = " ".join( [fcheck,fsup,fdebug] )
else:
    flags = " ".join( [fcheck,fsup] )

env.Replace( CCFLAGS = flags )


Help( \
"""
Targets: 
scons install: install the files

Options:""" + \
  opts.GenerateHelpText(env) \
)


################################################################################
# Configuration
################################################################################

conf = Configure(env)
have_cimg = False
if conf.CheckCXXHeader('CImg.h'):
    have_cimg = True
env = conf.Finish()


################################################################################
# Targets
################################################################################

# registration interface must have the CImg library available
if have_cimg == False:
    print "You must have the CImg.h library installed to build ometah registration"
else:
    registration = env.Program( target = 'registration', \
        source = ['ometah_registration.cpp','itsRegistration.cpp'], LIBS='ometah', LIBPATH='.')


Default(registration)
